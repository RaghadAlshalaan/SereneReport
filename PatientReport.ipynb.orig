{
 "cells": [
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 1,
   "metadata": {},
=======
<<<<<<< HEAD
   "execution_count": 109,
=======
<<<<<<< HEAD
   "execution_count": 6,
||||||| merged common ancestors
   "execution_count": 1,
=======
   "execution_count": 40,
>>>>>>> feae225c82506d4c3668349ca351f1833ad12f5d
>>>>>>> 1a0c39b07726b3864e412dda85bbb5ecc5c6c631
   "metadata": {},
<<<<<<< HEAD
   "outputs": [
    {
     "ename": "InvocationException",
     "evalue": "GraphViz's executables not found",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mInvocationException\u001b[0m                       Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-6-57523e265e73>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     17\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mcsv\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     18\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mIPython\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdisplay\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdisplay\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 19\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mModel\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mtrainData\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     20\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mrandom\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     21\u001b[0m \u001b[0;31m#from google.cloud import storage\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/Desktop/GP2/Serene Reports/SereneReport/Model.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m    108\u001b[0m                 class_names=df_desc.Label.unique().tolist())\n\u001b[1;32m    109\u001b[0m \u001b[0mgraph\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpydotplus\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgraph_from_dot_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdot_data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgetvalue\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 110\u001b[0;31m \u001b[0mImage\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgraph\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_png\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    111\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    112\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.7/site-packages/pydotplus/graphviz.py\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(f, prog)\u001b[0m\n\u001b[1;32m   1795\u001b[0m             self.__setattr__(\n\u001b[1;32m   1796\u001b[0m                 \u001b[0;34m'create_'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mfrmt\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1797\u001b[0;31m                 \u001b[0;32mlambda\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfrmt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mprog\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprog\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mprog\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mprog\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1798\u001b[0m             )\n\u001b[1;32m   1799\u001b[0m             \u001b[0mf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__dict__\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'create_'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mfrmt\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/lib/python3.7/site-packages/pydotplus/graphviz.py\u001b[0m in \u001b[0;36mcreate\u001b[0;34m(self, prog, format)\u001b[0m\n\u001b[1;32m   1958\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprogs\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1959\u001b[0m                 raise InvocationException(\n\u001b[0;32m-> 1960\u001b[0;31m                     'GraphViz\\'s executables not found')\n\u001b[0m\u001b[1;32m   1961\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1962\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mprog\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprogs\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mInvocationException\u001b[0m: GraphViz's executables not found"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
||||||| merged common ancestors
>>>>>>> Stashed changes
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dell\\Anaconda3\\lib\\site-packages\\sklearn\\utils\\deprecation.py:144: FutureWarning: The sklearn.datasets.samples_generator module is  deprecated in version 0.22 and will be removed in version 0.24. The corresponding classes / functions should instead be imported from sklearn.datasets. Anything that cannot be imported from sklearn.datasets is now part of the private API.\n",
      "  warnings.warn(message, FutureWarning)\n",
      "C:\\Users\\Dell\\Anaconda3\\lib\\site-packages\\sklearn\\externals\\six.py:31: FutureWarning: The module is deprecated in version 0.21 and will be removed in version 0.23 since we've dropped support for Python 2.7. Please rely on the official version of six (https://pypi.org/project/six/).\n",
      "  \"(https://pypi.org/project/six/).\", FutureWarning)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[3 3 3 ... 1 1 1]\n",
      "(879, 3)\n",
      "(879,)\n",
      "(377, 3)\n",
      "(377,)\n",
      "['LowA' 'Meduim' 'High' 'Low' 'Meduim']\n",
      "674        Low\n",
      "1252    Meduim\n",
      "550       High\n",
      "1096       Low\n",
      "371     Meduim\n",
      "Name: Label, dtype: object\n",
      "DecisionTrees's Accuracy:  0.9734748010610079\n",
      "DecisionTrees's Accuracy:  0.9787798408488063\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
<<<<<<< Updated upstream
=======
=======
   "outputs": [],
>>>>>>> feae225c82506d4c3668349ca351f1833ad12f5d
>>>>>>> Stashed changes
   "source": [
    "import datetime\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import firebase_admin\n",
    "from firebase_admin import credentials\n",
    "from firebase_admin import firestore\n",
    "from firebase_admin import storage\n",
    "import pyrebase\n",
    "\n",
    "from datetime import date, timedelta\n",
    "import urllib.request, json \n",
    "import time\n",
    "%matplotlib inline\n",
    "from matplotlib import pyplot as plt\n",
    "import matplotlib.dates as mdates\n",
    "import os\n",
    "import csv\n",
    "from IPython.display import display\n",
    "from Model import trainData\n",
    "import random\n",
    "#from google.cloud import storage\n",
    "\n",
    "from matplotlib.patches import Ellipse\n",
    "import matplotlib.patches as mpatches\n",
    "\n",
    "import seaborn as sns\n",
    "\n",
    "# signal processing\n",
    "from scipy import signal\n",
    "from scipy.ndimage import label\n",
    "from scipy.stats import zscore\n",
    "from scipy.interpolate import interp1d\n",
    "from scipy.integrate import trapz\n",
    "\n",
    "# misc\n",
    "import warnings\n",
    "\n",
    "#generate pdf\n",
    "from reportlab.pdfgen import canvas\n",
    "from reportlab.lib.colors import Color, lightblue, black"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "cred = credentials.Certificate(\"C:/Users/Dell/Documents/serene-2dfd6-firebase-adminsdk-gfc6o-a312184978.json\")\n",
    "app = firebase_admin.initialize_app(cred ,  {\n",
    "    'storageBucket': 'serene-2dfd6.appspot.com',\n",
    "}, name='[DEFAULT]')\n",
    "db = firestore.client()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "duration = 30\n",
    "userID = \"UqTdL3T7MteuQHBe1aNfSE9u0Na2\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "today = datetime.datetime.now()\n",
    "timestamp = today.strftime(\"%Y-%m-%d %H:%M:%S\")\n",
    "bucket = storage.bucket(app=app)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Get data from storage and get list of dates "
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 40,
=======
   "execution_count": 72,
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [],
   "source": [
    "dates =[]\n",
    "for x in range(0 ,duration):\n",
    "    today=date.today() \n",
    "    #yesterday = today - datetime.timedelta(days=1)\n",
    "    start_date = (today-timedelta(days=duration-x)).isoformat()\n",
    "    dates.append(start_date)"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 41,
=======
   "execution_count": 77,
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [],
   "source": [
    "df= pd.DataFrame()\n",
    "notAvailableDates = []\n",
    "# loop through the storage and get the data\n",
    "sleep =[]\n",
    "for x in range(0 ,len(dates)):\n",
    "    #Sleep\n",
    "    blob = bucket.blob(userID+\"/fitbitData/\"+dates[x]+\"/\"+dates[x]+\"-sleep.json\")\n",
    "    # download the file \n",
    "    u = blob.generate_signed_url(datetime.timedelta(seconds=300), method='GET')\n",
    "    try:\n",
    "        with urllib.request.urlopen(u) as url:\n",
    "            data = json.loads(url.read().decode())\n",
    "            sleepMinutes = data['summary'][\"totalMinutesAsleep\"]\n",
    "    except:\n",
    "        notAvailableDates.append(dates[x])\n",
    "        pass\n",
    "        \n",
    "    #Activity (Steps)\n",
    "    blob = bucket.blob(userID+\"/fitbitData/\"+dates[x]+\"/\"+dates[x]+\"-activity.json\")\n",
    "    # download the file \n",
    "    u = blob.generate_signed_url(datetime.timedelta(seconds=300), method='GET')\n",
    "    try:\n",
    "        with urllib.request.urlopen(u) as url:\n",
    "            data = json.loads(url.read().decode())\n",
    "            steps = data['summary'][\"steps\"]\n",
    "    except:\n",
    "        notAvailableDates.append(dates[x])\n",
    "        pass\n",
    "    \n",
    "    #heartrate\n",
    "    blob = bucket.blob(userID+\"/fitbitData/\"+dates[x]+\"/\"+dates[x]+\"-heartrate.json\")\n",
    "    u = blob.generate_signed_url(datetime.timedelta(seconds=300), method='GET')\n",
    "    try:\n",
    "        with urllib.request.urlopen(u) as url:\n",
    "            data = json.loads(url.read().decode())\n",
    "            df_heartrate = pd.DataFrame(data['activities-heart-intraday']['dataset'])\n",
    "   \n",
    "        df_heartrate.time.apply(str)\n",
    "        df_heartrate['time'] = pd.to_datetime(df_heartrate['time'])\n",
    "        df_heartrate['hour'] = df_heartrate['time'].apply(lambda time: time.strftime('%H'))\n",
    "        df_heartrate.drop(['time'],axis=1, inplace = True)\n",
    "        heart_rate = df_heartrate.groupby([\"hour\"], as_index=False).max()\n",
    "        heart_rate['sleepMin'] = sleepMinutes\n",
    "        heart_rate['TotalSteps'] = steps\n",
    "        heart_rate['date'] = dates[x]\n",
    "        heart_rate = heart_rate.astype({\"hour\": int})  \n",
    "    except:\n",
    "        notAvailableDates.append(dates[x])\n",
    "        pass\n",
    "    \n",
    "    # append dataframe\n",
    "    df = df.append(heart_rate, ignore_index = True)"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 42,
=======
   "execution_count": 78,
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hour</th>\n",
       "      <th>value</th>\n",
       "      <th>sleepMin</th>\n",
       "      <th>TotalSteps</th>\n",
       "      <th>date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>11</td>\n",
       "      <td>110</td>\n",
       "      <td>0</td>\n",
<<<<<<< Updated upstream
       "      <td>73.100000</td>\n",
       "      <td>340</td>\n",
       "      <td>2012</td>\n",
       "      <td>2020-03-12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>69.883333</td>\n",
       "      <td>340</td>\n",
       "      <td>2012</td>\n",
       "      <td>2020-03-12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>73.933333</td>\n",
       "      <td>340</td>\n",
       "      <td>2012</td>\n",
       "      <td>2020-03-12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>71.833333</td>\n",
       "      <td>340</td>\n",
       "      <td>2012</td>\n",
       "      <td>2020-03-12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>68.916667</td>\n",
       "      <td>340</td>\n",
       "      <td>2012</td>\n",
       "      <td>2020-03-12</td>\n",
=======
       "      <td>2244</td>\n",
       "      <td>2020-03-18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12</td>\n",
       "      <td>102</td>\n",
       "      <td>0</td>\n",
       "      <td>2244</td>\n",
       "      <td>2020-03-18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>13</td>\n",
       "      <td>92</td>\n",
       "      <td>0</td>\n",
       "      <td>2244</td>\n",
       "      <td>2020-03-18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>14</td>\n",
       "      <td>111</td>\n",
       "      <td>0</td>\n",
       "      <td>2244</td>\n",
       "      <td>2020-03-18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>15</td>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "      <td>2244</td>\n",
       "      <td>2020-03-18</td>\n",
>>>>>>> Stashed changes
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
<<<<<<< Updated upstream
       "      <th>640</th>\n",
       "      <td>13</td>\n",
       "      <td>62.516667</td>\n",
       "      <td>289</td>\n",
       "      <td>2025</td>\n",
       "      <td>2020-04-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>641</th>\n",
       "      <td>14</td>\n",
       "      <td>62.150000</td>\n",
       "      <td>289</td>\n",
       "      <td>2025</td>\n",
       "      <td>2020-04-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>642</th>\n",
       "      <td>15</td>\n",
       "      <td>62.416667</td>\n",
       "      <td>289</td>\n",
       "      <td>2025</td>\n",
       "      <td>2020-04-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>643</th>\n",
       "      <td>16</td>\n",
       "      <td>67.096154</td>\n",
       "      <td>289</td>\n",
       "      <td>2025</td>\n",
       "      <td>2020-04-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>644</th>\n",
       "      <td>23</td>\n",
       "      <td>91.652174</td>\n",
       "      <td>289</td>\n",
       "      <td>2025</td>\n",
       "      <td>2020-04-10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>645 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     hour      value  sleepMin  TotalSteps        date\n",
       "0       0  73.100000       340        2012  2020-03-12\n",
       "1       1  69.883333       340        2012  2020-03-12\n",
       "2       2  73.933333       340        2012  2020-03-12\n",
       "3       3  71.833333       340        2012  2020-03-12\n",
       "4       4  68.916667       340        2012  2020-03-12\n",
       "..    ...        ...       ...         ...         ...\n",
       "640    13  62.516667       289        2025  2020-04-10\n",
       "641    14  62.150000       289        2025  2020-04-10\n",
       "642    15  62.416667       289        2025  2020-04-10\n",
       "643    16  67.096154       289        2025  2020-04-10\n",
       "644    23  91.652174       289        2025  2020-04-10\n",
       "\n",
       "[645 rows x 5 columns]"
      ]
     },
     "execution_count": 42,
=======
       "      <th>623</th>\n",
       "      <td>19</td>\n",
       "      <td>84</td>\n",
       "      <td>300</td>\n",
       "      <td>3399</td>\n",
       "      <td>2020-04-15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>624</th>\n",
       "      <td>20</td>\n",
       "      <td>127</td>\n",
       "      <td>300</td>\n",
       "      <td>3399</td>\n",
       "      <td>2020-04-15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>625</th>\n",
       "      <td>21</td>\n",
       "      <td>143</td>\n",
       "      <td>300</td>\n",
       "      <td>3399</td>\n",
       "      <td>2020-04-15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>626</th>\n",
       "      <td>22</td>\n",
       "      <td>109</td>\n",
       "      <td>300</td>\n",
       "      <td>3399</td>\n",
       "      <td>2020-04-15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>627</th>\n",
       "      <td>23</td>\n",
       "      <td>151</td>\n",
       "      <td>300</td>\n",
       "      <td>3399</td>\n",
       "      <td>2020-04-15</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>628 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     hour  value  sleepMin  TotalSteps        date\n",
       "0      11    110         0        2244  2020-03-18\n",
       "1      12    102         0        2244  2020-03-18\n",
       "2      13     92         0        2244  2020-03-18\n",
       "3      14    111         0        2244  2020-03-18\n",
       "4      15    116         0        2244  2020-03-18\n",
       "..    ...    ...       ...         ...         ...\n",
       "623    19     84       300        3399  2020-04-15\n",
       "624    20    127       300        3399  2020-04-15\n",
       "625    21    143       300        3399  2020-04-15\n",
       "626    22    109       300        3399  2020-04-15\n",
       "627    23    151       300        3399  2020-04-15\n",
       "\n",
       "[628 rows x 5 columns]"
      ]
     },
     "execution_count": 78,
>>>>>>> Stashed changes
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [],
   "source": [
    "notAvailableDates\n",
    "notSyncedDates = pd.DataFrame()\n",
    "notSyncedDates ['date'] = notAvailableDates "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [],
   "source": [
    "notSyncedDates = notSyncedDates.drop_duplicates()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Get user location"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 43,
=======
   "execution_count": 81,
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [],
   "source": [
    "# get location from database\n",
    "loc_df = pd.DataFrame()\n",
    "locID = []\n",
    "locations = db.collection(u'PatientLocations').where(u'patientID', u'==', userID ).stream()\n",
    "\n",
    "for location in locations:\n",
    "    loc = location.to_dict()\n",
    "    locID.append(location.id)\n",
    "    loc_df = loc_df.append(pd.DataFrame(loc,index=[0]),ignore_index=True)\n",
    "    \n",
    "loc_df['id'] = locID"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 44,
=======
   "execution_count": 82,
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [],
   "source": [
    "loc_df.drop(['anxietyLevel', 'lat','lng', 'patientID'  ], axis=1, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 45,
=======
   "execution_count": 83,
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [],
   "source": [
    "loc_df.time.apply(str)\n",
    "loc_df['time'] = pd.to_datetime(loc_df['time'])\n",
    "loc_df['date'] = pd.to_datetime(loc_df['time'], format='%Y:%M:%D').dt.date\n",
    "loc_df['hour'] = loc_df['time'].apply(lambda time: time.strftime('%H'))\n",
    "loc_df.drop(['time'], axis=1, inplace = True)\n",
    "loc_df.hour = loc_df.hour.astype(int) \n",
    "loc_df.date = loc_df.date.astype(str)\n",
    "df.date = df.date.astype(str)"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 46,
=======
   "execution_count": 110,
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [],
   "source": [
    "dfinal = pd.merge(left=df, \n",
    "                  right = loc_df,\n",
    "                  how = 'left',\n",
    "                  left_on=['hour','date'],\n",
    "                  right_on=['hour','date']).ffill()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Test data into model"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 47,
=======
   "execution_count": 111,
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [],
   "source": [
    "#test model \n",
    "train_df = dfinal.rename(columns={'value': 'Heartrate'})"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 48,
=======
   "execution_count": 112,
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [],
   "source": [
    "Labeled_df = pd.DataFrame()\n",
    "Labeled_df = trainData(train_df)"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 49,
=======
   "execution_count": 113,
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [],
   "source": [
    "Labeled_df.drop(['lon'],axis=1, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 50,
=======
   "execution_count": 114,
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [],
   "source": [
    "# Replace missing values because it doesn't exist\n",
    "Labeled_df['name'].fillna(\"Not given\", inplace=True)\n",
    "Labeled_df['id'].fillna(\"Not given\", inplace=True)"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 51,
=======
   "execution_count": 19,
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [],
   "source": [
    "# Update firebase with the user anxiety level \n",
    "for row in Labeled_df.itertuples():\n",
    "    if row.id != 'Not given':\n",
    "        if row.Label == 'Low' or row.Label == 'LowA':\n",
    "            anxietyLevel = '1'\n",
    "        elif row.Label == 'Meduim':\n",
    "            anxietyLevel = '2'\n",
    "        else:\n",
    "            anxietyLevel = '3' \n",
    "        doc_ref = db.collection(u'PatientLocations').document(row.id)\n",
    "        doc_ref.update({\n",
    "                            u'anxietyLevel':anxietyLevel\n",
    "                     })"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Show the places with highest anxiety level"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 52,
=======
   "execution_count": 115,
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [],
   "source": [
    "# Show the highest level \n",
    "df_high = pd.DataFrame()\n",
    "df_high = Labeled_df[Labeled_df.Label == 'High']"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 53,
=======
   "execution_count": 116,
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hour</th>\n",
       "      <th>Heartrate</th>\n",
       "      <th>sleepMin</th>\n",
       "      <th>TotalSteps</th>\n",
       "      <th>date</th>\n",
       "      <th>nearestLoc</th>\n",
       "      <th>name</th>\n",
       "      <th>id</th>\n",
       "      <th>Label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [hour, Heartrate, sleepMin, TotalSteps, date, nearestLoc, name, id, Label]\n",
       "Index: []"
      ]
     },
<<<<<<< Updated upstream
     "execution_count": 53,
=======
     "execution_count": 116,
>>>>>>> Stashed changes
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_high.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hour</th>\n",
       "      <th>Heartrate</th>\n",
       "      <th>sleepMin</th>\n",
       "      <th>TotalSteps</th>\n",
       "      <th>date</th>\n",
       "      <th>nearestLoc</th>\n",
       "      <th>name</th>\n",
       "      <th>id</th>\n",
       "      <th>Label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>11</td>\n",
       "      <td>110</td>\n",
       "      <td>0</td>\n",
       "      <td>2244</td>\n",
       "      <td>2020-03-18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Not given</td>\n",
       "      <td>Not given</td>\n",
       "      <td>Meduim</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12</td>\n",
       "      <td>102</td>\n",
       "      <td>0</td>\n",
       "      <td>2244</td>\n",
       "      <td>2020-03-18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Not given</td>\n",
       "      <td>Not given</td>\n",
       "      <td>Meduim</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>13</td>\n",
       "      <td>92</td>\n",
       "      <td>0</td>\n",
       "      <td>2244</td>\n",
       "      <td>2020-03-18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Not given</td>\n",
       "      <td>Not given</td>\n",
       "      <td>Meduim</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>14</td>\n",
       "      <td>111</td>\n",
       "      <td>0</td>\n",
       "      <td>2244</td>\n",
       "      <td>2020-03-18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Not given</td>\n",
       "      <td>Not given</td>\n",
       "      <td>Meduim</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>15</td>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "      <td>2244</td>\n",
       "      <td>2020-03-18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Not given</td>\n",
       "      <td>Not given</td>\n",
       "      <td>Meduim</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   hour  Heartrate  sleepMin  TotalSteps        date nearestLoc       name  \\\n",
       "0    11        110         0        2244  2020-03-18        NaN  Not given   \n",
       "1    12        102         0        2244  2020-03-18        NaN  Not given   \n",
       "2    13         92         0        2244  2020-03-18        NaN  Not given   \n",
       "3    14        111         0        2244  2020-03-18        NaN  Not given   \n",
       "4    15        116         0        2244  2020-03-18        NaN  Not given   \n",
       "\n",
       "          id   Label  \n",
       "0  Not given  Meduim  \n",
       "1  Not given  Meduim  \n",
       "2  Not given  Meduim  \n",
       "3  Not given  Meduim  \n",
       "4  Not given  Meduim  "
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Labeled_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Improvements"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Recommendation"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 54,
=======
   "execution_count": 118,
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [],
   "source": [
    "docDf = pd.DataFrame()\n",
    "doc_ref = db.collection(u'Patient').document(userID)\n",
    "doc = doc_ref.get().to_dict()\n",
    "docDf = docDf.append(pd.DataFrame(doc,index=[0]),ignore_index=True)"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 55,
=======
   "execution_count": 119,
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [],
   "source": [
    "age1 = docDf['age'].values\n",
    "name1 = docDf['name'].values\n",
    "emp1 = docDf['employmentStatus'].values\n",
    "mar1 = docDf['maritalStatus'].values\n",
    "income1 = docDf['monthlyIncome'].values\n",
    "chronicD1 = docDf['chronicDiseases'].values\n",
    "smoke1 = docDf['smokeCigarettes'].values\n",
    "gad1 = docDf['GAD-7ScaleScore'].values\n",
    "\n",
    "age = age1[0] \n",
    "name = name1[0]\n",
    "emp = emp1[0]\n",
    "mar = mar1[0]\n",
    "income = income1[0]\n",
    "chronicD = chronicD1[0]\n",
    "smoke = smoke1[0]\n",
    "gad = gad1[0]\n",
    "\n",
    "\n",
    "compareAge = int(age)\n"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3394.77"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
=======
   "execution_count": 120,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3403\n"
     ]
>>>>>>> Stashed changes
    }
   ],
   "source": [
    "sleepMin = Labeled_df['sleepMin'].mean()\n",
    "totalSteps = Labeled_df['TotalSteps'].mean()\n",
    "\n",
    "sleepRecomendation = False\n",
    "stepsRecomendation = False\n",
    "recomendedSteps = 'No recomendation'\n",
    "\n",
    "if sleepMin < 360:\n",
    "    sleepRecomendation = True\n",
    "if compareAge < 20 and compareAge > 11:\n",
    "    if totalSteps < 6000:\n",
    "        stepsRecomendation = True\n",
    "        recomendedSteps = '6000'\n",
    "if compareAge < 66 and compareAge > 19:  \n",
    "     if totalSteps < 3000:\n",
    "        stepsRecomendation = True\n",
    "        recomendedSteps = '3000'\n",
    "        \n",
    "sleepMin = sleepMin / 60\n",
    "\n",
    "\n",
<<<<<<< Updated upstream
    "float(\"{:.2f}\".format(sleepMin))\n",
    "float(\"{:.2f}\".format(totalSteps))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "update_time {\n",
       "  seconds: 1586640559\n",
       "  nanos: 678382000\n",
       "}"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# store recomendation in database\n",
    "ID = random.randint(1500000,10000000)\n",
    "doc_rec = db.collection(u'LastGeneratePatientReport').document(str(ID))\n",
    "doc_rec.set({\n",
    "    u'steps': totalSteps,\n",
    "    u'patientID':userID,\n",
    "    u'sleepMin': sleepMin,\n",
    "    u'sleepRecomendation': sleepRecomendation,\n",
    "    u'stepsRecomendation': stepsRecomendation,\n",
    "    u'recommended_steps': recomendedSteps\n",
    "})\n"
=======
    "sleepMin = float(\"{:.1f}\".format(sleepMin))\n",
    "totalSteps = int(totalSteps)\n",
    "print(totalSteps)"
>>>>>>> Stashed changes
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Storage intilization"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 58,
=======
   "execution_count": 121,
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [],
   "source": [
    "firebaseConfig = {\n",
    "    \"apiKey\": \"AIzaSyBoxoXwFm9TuFysjQYag0GB1NEPyBINlTU\",\n",
    "    \"authDomain\": \"serene-2dfd6.firebaseapp.com\",\n",
    "    \"databaseURL\": \"https://serene-2dfd6.firebaseio.com\",\n",
    "    \"projectId\": \"serene-2dfd6\",\n",
    "    \"storageBucket\": \"serene-2dfd6.appspot.com\",\n",
    "    \"messagingSenderId\": \"461213981433\",\n",
    "    \"appId\": \"1:461213981433:web:62428e3664182b3e58e028\",\n",
    "    \"measurementId\": \"G-J66VP2Y3CR\"\n",
    "  }\n",
    "  \n",
    "firebase = pyrebase.initialize_app(firebaseConfig)\n",
    "storage = firebase.storage()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# AL"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 59,
=======
   "execution_count": 122,
   "metadata": {},
   "outputs": [],
   "source": [
    "sns.set( rc={'axes.facecolor': '#fcfeff'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [],
   "source": [
    "# Change Label values to num, to represent them in a barchart\n",
    "nums=[]\n",
    "for row in Labeled_df.itertuples():\n",
    "    if row.Label == 'Low' or row.Label == 'LowA':\n",
    "        nums.append(1)\n",
    "    elif row.Label == 'Meduim':\n",
    "        nums.append(2)\n",
    "    else:\n",
    "        nums.append(3)\n",
    "Labeled_df['numLabel'] = nums"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 60,
=======
   "execution_count": 124,
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get anxiety level by day and store it in a new data frame\n",
    "plot_df = pd.DataFrame()\n",
    "avgAnxiety = []\n",
    "totalAnxiety = 0\n",
    "rowCount = 1\n",
    "for x in range(0 ,len(dates)):\n",
    "    for row in Labeled_df.itertuples():\n",
    "        if (row.date == dates[x]):\n",
    "            rowCount += 1\n",
    "            totalAnxiety += row.numLabel\n",
    "    avgAnxiety.append(totalAnxiety/rowCount)\n",
    "    \n",
    "\n",
    "plot_df['date'] = dates\n",
    "plot_df['Anxiety'] = avgAnxiety"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 98,
=======
   "execution_count": 125,
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [],
   "source": [
    "#divide dataframe into 15 rows (2 weeks)\n",
    "\n",
    "df1 = pd.DataFrame()\n",
    "df2 = pd.DataFrame()\n",
    "df3 = pd.DataFrame()\n",
    "df4 = pd.DataFrame()\n",
    "df5 = pd.DataFrame()\n",
    "df6 = pd.DataFrame()\n",
    "df7 = pd.DataFrame()\n",
    "df8 = pd.DataFrame()\n",
    "df9 = pd.DataFrame()\n",
    "df10 = pd.DataFrame()\n",
    "df11 = pd.DataFrame()\n",
    "df12 = pd.DataFrame()\n",
    "dfarray = []\n",
    "count = 0\n",
    "if(len(plot_df) > 15):\n",
    "    df1 = plot_df[:15]\n",
    "    df2 = plot_df[15:]\n",
    "    dfarray.append(df1)\n",
    "    dfarray.append(df2)\n",
    "    if(len(df2)>15):\n",
    "        count = (df2.last_valid_index() - (len(df2) - 15))\n",
    "        df3 = df2[count:]\n",
    "        dfarray.append(df3)\n",
    "        if(len(df3)>15):\n",
    "            count = (df3.last_valid_index() - (len(df3) - 15))\n",
    "            df4 = df3[count:]\n",
    "            dfarray.append(df4)\n",
    "            if(len(df4)>15):\n",
    "                count = (df4.last_valid_index() - (len(df4) - 15))\n",
    "                df5 = df4[count:]\n",
    "                dfarray.append(df5)\n",
    "                if(len(df5)>15):\n",
    "                    count = (df5.last_valid_index() - (len(df5) - 15))\n",
    "                    df6 = df5[count:]\n",
    "                    dfarray.append(df6)\n",
    "                    if(len(df6)>15):\n",
    "                        count = (df6.last_valid_index() - (len(df6) - 15))\n",
    "                        df7 = df6[count:]\n",
    "                        dfarray.append(df7)\n",
    "                        if(len(df7)>15):\n",
    "                            count = (df7.last_valid_index() - (len(df7) - 15))\n",
    "                            df8 = df7[count:]\n",
    "                            dfarray.append(df8)\n",
    "                            if(len(df8)>15):\n",
    "                                count = (df8.last_valid_index() - (len(df8) - 15))\n",
    "                                df9 = df8[count:]\n",
    "                                dfarray.append(df9)\n",
    "                                if(len(df9)>15):\n",
    "                                    count = (df9.last_valid_index() - (len(df9) - 15))\n",
    "                                    df10 = df9[count:]\n",
    "                                    dfarray.append(df10)\n",
    "                                    if(len(df10)>15):\n",
    "                                        count = (df10.last_valid_index() - (len(df10) - 15))\n",
    "                                        df11 = df10[count:]\n",
    "                                        dfarray.append(df11)\n",
    "                                        if(len(df11)>15):\n",
    "                                            count = (df11.last_valid_index() - (len(df11) - 15))\n",
    "                                            df12 = df11[count:]\n",
    "                                            dfarray.append(df12)\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dell\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py:5: UserWarning: In Matplotlib 3.3 individual lines on a stem plot will be added as a LineCollection instead of individual lines. This significantly improves the performance of a stem plot. To remove this warning and switch to the new behaviour, set the \"use_line_collection\" keyword argument to True.\n",
      "  \"\"\"\n",
      "C:\\Users\\Dell\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py:5: UserWarning: In Matplotlib 3.3 individual lines on a stem plot will be added as a LineCollection instead of individual lines. This significantly improves the performance of a stem plot. To remove this warning and switch to the new behaviour, set the \"use_line_collection\" keyword argument to True.\n",
      "  \"\"\"\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
=======
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
>>>>>>> Stashed changes
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
<<<<<<< Updated upstream
    },
    {
     "data": {
      "image/png": "\n",
=======
    }
   ],
   "source": [
    "# Plot AL\n",
    "if(len(plot_df)<15):\n",
    "    fig, ax = plt.subplots()\n",
    "    c1 = '#9dd6f5'\n",
    "    c2 = '#4ba0d1'\n",
    "    c3 = '#23495f'\n",
    "    for t, y in zip(plot_df[\"date\"], plot_df[\"Anxiety\"]):\n",
    "    \n",
    "        c=\"\"\n",
    "        if(y <= 1):\n",
    "            c = c1      \n",
    "        elif (1 < y <= 2):\n",
    "            c = c2       \n",
    "        elif ( y > 2): \n",
    "            c = c3          \n",
    "        ax.plot([t,t], [0,y], color=c, marker=\"o\",markevery=(1,2),linewidth=4,markeredgewidth=4)\n",
    "\n",
    "    colors = [[c1,c1],[c2,c2],[c3,c3]]          \n",
    "    categories = ['Low','Meduim','High']\n",
    "\n",
    "    #create dict\n",
    "    legend_dict=dict(zip(categories,colors))\n",
    "    #create patches\n",
    "    patchList = []\n",
    "    for key in legend_dict:\n",
    "            data_key = mpatches.Patch(facecolor=legend_dict[key][0], \n",
    "                                  edgecolor=legend_dict[key][1], label=key)\n",
    "            patchList.append(data_key)\n",
    "\n",
    "    ax.legend(handles=patchList,ncol=len(categories), fontsize=12)   \n",
    "\n",
    "        \n",
    "    plt.tick_params(axis='x', rotation=70)\n",
    "\n",
    "    # Start the graph at 0\n",
    "\n",
    "    ax.set_ylim(0, 3)\n",
    "\n",
    "    #fig.set_size_inches(15.5, 10)\n",
    "    plt.tight_layout()\n",
    "\n",
    "\n",
    "    plt.xlabel('Date')\n",
    "\n",
    "    ax.yaxis.set_label_coords(-0.02, 0.48)\n",
    "\n",
    "   \n",
    "\n",
    "    fig.savefig('AL0.png', dpi = None)\n",
    "    imagePath = 'AL0.png'\n",
    "    link = storage.child(userID+\"/lastGeneratedPatientReport/AL0.png\").put('AL0.png')\n",
    "    os.remove('AL0.png')\n",
    "    \n",
    "    \n",
    "else:   \n",
    "    links = []\n",
    "    for x in range(0,len(dfarray)):\n",
    "        fig, ax = plt.subplots()\n",
    "        c1 = '#9dd6f5'\n",
    "        c2 = '#4ba0d1'\n",
    "        c3 = '#23495f'\n",
    "        for t, y in zip(dfarray[x][\"date\"], dfarray[x][\"Anxiety\"]):\n",
    "    \n",
    "            c=\"\"\n",
    "            if(y <= 1):\n",
    "                c = c1      \n",
    "            elif (1 < y <= 2):\n",
    "                c = c2       \n",
    "            elif ( y > 2): \n",
    "                c = c3          \n",
    "            ax.plot([t,t], [0,y], color=c, marker=\"o\",markevery=(1,2),linewidth=4,markeredgewidth=4)\n",
    "\n",
    "        colors = [[c1,c1],[c2,c2],[c3,c3]]          \n",
    "        categories = ['Low','Meduim','High']\n",
    "\n",
    "        #create dict\n",
    "        legend_dict=dict(zip(categories,colors))\n",
    "        #create patches\n",
    "        patchList = []\n",
    "        for key in legend_dict:\n",
    "                data_key = mpatches.Patch(facecolor=legend_dict[key][0], \n",
    "                                  edgecolor=legend_dict[key][1], label=key)\n",
    "                patchList.append(data_key)\n",
    "\n",
    "        ax.legend(handles=patchList,ncol=len(categories), fontsize=12)   \n",
    "\n",
    "        \n",
    "        plt.tick_params(axis='x', rotation=70)\n",
    "\n",
    "    # Start the graph at 0\n",
    "\n",
    "        ax.set_ylim(0, 3)\n",
    "\n",
    "        #fig.set_size_inches(15.5, 10)\n",
    "        plt.tight_layout()\n",
    "\n",
    "\n",
    "        plt.xlabel('Date')\n",
    "\n",
    "        ax.yaxis.set_label_coords(-0.02, 0.48)\n",
    "\n",
    "   \n",
    "        fig.savefig('AL'+str(x)+'.png', dpi = None)\n",
    "        imagePath = 'AL'+str(x)+'.png'\n",
    "        link = storage.child(userID+\"/lastGeneratedPatientReport/AL\"+str(x)+'.png').put('AL'+str(x)+'.png')\n",
    "        links.append(link)\n",
    "        os.remove('AL'+str(x)+'.png')\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### save file to database first"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [],
   "source": [
    "if (len(plot_df)<15):\n",
    "    linkDF = pd.DataFrame()\n",
    "    linkDF = linkDF.append(pd.DataFrame(link,index=[0]),ignore_index=True)\n",
    "    token1 = linkDF['downloadTokens'].values\n",
    "    token = token1[0]\n",
    "    AlLink = storage.child(userID+\"/lastGeneratedPatientReport/AL0.png\").get_url(token)\n",
    "    doc_rec = db.collection(u'LastGeneratePatientReport').document('report'+userID)\n",
    "    doc_rec.set({\n",
    "        u'average_steps': totalSteps,\n",
    "        u'patient_id':userID,\n",
    "        u'average_sleep_hours': sleepMin,\n",
    "        u'sleepRecomendation': sleepRecomendation,\n",
    "        u'stepsRecomendation': stepsRecomendation,\n",
    "        u'recommended_steps': recomendedSteps,\n",
    "        u'number_of_AL_graphs': 1,\n",
    "        u'AL_graph_0': AlLink,\n",
    "        u'recommended_sleep_hours': '7-9'\n",
    "        \n",
    "    })\n",
    "else:\n",
    "    firebase_links = []\n",
    "    for x in range(0,len(links)):\n",
    "        linkDF = pd.DataFrame()\n",
    "        linkDF = linkDF.append(pd.DataFrame(link,index=[0]),ignore_index=True)\n",
    "        token1 = linkDF['downloadTokens'].values\n",
    "        token = token1[0]\n",
    "        AlLink = storage.child(userID+\"/lastGeneratedPatientReport/AL\"+str(x)+'.png').get_url(token)\n",
    "        firebase_links.append(AlLink)\n",
    "        \n",
    "    doc_rec = db.collection(u'LastGeneratePatientReport').document('report'+userID)\n",
    "    doc_rec.set({\n",
    "        u'average_steps': totalSteps,\n",
    "        u'patient_id':userID,\n",
    "        u'average_sleep_hours': sleepMin,\n",
    "        u'sleepRecomendation': sleepRecomendation,\n",
    "        u'stepsRecomendation': stepsRecomendation,\n",
    "        u'recommended_steps': recomendedSteps,\n",
    "        u'number_of_AL_graphs': len(links),\n",
    "        u'recommended_sleep_hours': '7-9'\n",
    "        \n",
    "    })\n",
    "    for x in range(0,len(links)):\n",
    "        doc_rec = db.collection(u'LastGeneratePatientReport').document('report'+userID)\n",
    "        doc_rec.update({\n",
    "        u'AL_graph_'+ str(x): firebase_links[x]\n",
    "        })"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## To generate graphs for PDF report"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [],
   "source": [
    "df1 = pd.DataFrame()\n",
    "df2 = pd.DataFrame()\n",
    "\n",
    "dfarray = []\n",
    "count = 0\n",
    "if(len(plot_df) > 90):\n",
    "    df1 = plot_df[:90]\n",
    "    df2 = plot_df[90:]\n",
    "    dfarray.append(df1)\n",
    "    dfarray.append(df2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
>>>>>>> Stashed changes
      "text/plain": [
       "<Figure size 1116x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot AL\n",
    "for x in range(0,len(dfarray)):\n",
    "    fig, ax = plt.subplots()\n",
    "    c1 = '#9dd6f5'\n",
    "    c2 = '#4ba0d1'\n",
    "    c3 = '#23495f'\n",
    "    for t, y in zip(plot_df[\"date\"], plot_df[\"Anxiety\"]):\n",
    "    \n",
<<<<<<< Updated upstream
    "    # Draw the stem and circle\n",
    "    ax.stem(dfarray[x].date, dfarray[x].Anxiety, basefmt=' ')\n",
=======
    "        c=\"\"\n",
    "        if(y <= 1):\n",
    "            c = c1      \n",
    "        elif (1 < y <= 2):\n",
    "            c = c2       \n",
    "        elif ( y > 2): \n",
    "            c = c3          \n",
    "        ax.plot([t,t], [0,y], color=c, marker=\"o\",markevery=(1,2),linewidth=4,markeredgewidth=4)\n",
    "\n",
    "    colors = [[c1,c1],[c2,c2],[c3,c3]]          \n",
    "    categories = ['Low','Meduim','High']\n",
    "\n",
    "    #create dict\n",
    "    legend_dict=dict(zip(categories,colors))\n",
    "    #create patches\n",
    "    patchList = []\n",
    "    for key in legend_dict:\n",
    "            data_key = mpatches.Patch(facecolor=legend_dict[key][0], \n",
    "                                  edgecolor=legend_dict[key][1], label=key)\n",
    "            patchList.append(data_key)\n",
    "\n",
    "    ax.legend(handles=patchList,ncol=len(categories), fontsize=12)   \n",
    "\n",
    "        \n",
>>>>>>> Stashed changes
    "    plt.tick_params(axis='x', rotation=70)\n",
    "\n",
    "    # Start the graph at 0\n",
    "\n",
    "    ax.set_ylim(0, 3)\n",
<<<<<<< Updated upstream
    "    ax.set_title('Anxiety level (Throughout week)')\n",
    "    plt.xlabel('Date')\n",
    "    plt.ylabel('Low        Meduim        High', fontsize= 12)\n",
    "    ax.yaxis.set_label_coords(-0.1, 0.47)\n",
=======
    "\n",
    "    fig.set_size_inches(15.5, 10)\n",
    "    plt.tight_layout()\n",
>>>>>>> Stashed changes
    "\n",
    "\n",
    "    plt.xlabel('Date')\n",
    "\n",
    "    ax.yaxis.set_label_coords(-0.02, 0.48)\n",
    "\n",
<<<<<<< Updated upstream
    "    conv = str(x)\n",
    "    fig.savefig('AL'+str(x)+'.png', dpi = 100)\n",
    "    imagePath = 'AL'+str(x)+'.png'\n",
    "    storage.child(userID+\"/lastGeneratedPatientReport/AL\"+str(x)+'.png').put('AL'+str(x)+'.png')\n",
    "    os.remove('AL'+str(x)+'.png')\n",
    "    "
   ]
=======
    "    fig.savefig('ALpdf.png', dpi = None)\n",
    "    \n",
    "else:    \n",
    "    for x in range(0,len(dfarray)):\n",
    "        fig, ax = plt.subplots()\n",
    "        c1 = '#9dd6f5'\n",
    "        c2 = '#4ba0d1'\n",
    "        c3 = '#23495f'\n",
    "        for t, y in zip(dfarray[x][\"date\"], dfarray[x][\"Anxiety\"]):\n",
    "    \n",
    "            c=\"\"\n",
    "            if(y <= 1):\n",
    "                c = c1      \n",
    "            elif (1 < y <= 2):\n",
    "                c = c2       \n",
    "            elif ( y > 2): \n",
    "                c = c3          \n",
    "            ax.plot([t,t], [0,y], color=c, marker=\"o\",markevery=(1,2),linewidth=4,markeredgewidth=4)\n",
    "\n",
    "        colors = [[c1,c1],[c2,c2],[c3,c3]]          \n",
    "        categories = ['Low','Meduim','High']\n",
    "\n",
    "        #create dict\n",
    "        legend_dict=dict(zip(categories,colors))\n",
    "        #create patches\n",
    "        patchList = []\n",
    "        for key in legend_dict:\n",
    "                data_key = mpatches.Patch(facecolor=legend_dict[key][0], \n",
    "                                  edgecolor=legend_dict[key][1], label=key)\n",
    "                patchList.append(data_key)\n",
    "\n",
    "        ax.legend(handles=patchList,ncol=len(categories), fontsize=12)   \n",
    "\n",
    "        \n",
    "        plt.tick_params(axis='x', rotation=70)\n",
    "\n",
    "    # Start the graph at 0\n",
    "\n",
    "        ax.set_ylim(0, 3)\n",
    "\n",
    "        fig.set_size_inches(15.5, 10)\n",
    "        plt.tight_layout()\n",
    "\n",
    "\n",
    "        plt.xlabel('Date')\n",
    "\n",
    "        ax.yaxis.set_label_coords(-0.02, 0.48)\n",
    "\n",
    "\n",
    "\n",
    "        fig.savefig('AL'+str(x)+'pdf.png', dpi = None)\n",
    "    \n",
    "   \n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Location Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "metadata": {},
   "outputs": [],
   "source": [
    "# get location from database\n",
    "new_loc = pd.DataFrame()\n",
    "locID = []\n",
    "locations = db.collection(u'PatientLocations').where(u'patientID', u'==', userID ).stream()\n",
    "\n",
    "for location in locations:\n",
    "    loc = location.to_dict()\n",
    "    locID.append(location.id)\n",
    "    new_loc = new_loc.append(pd.DataFrame(loc,index=[0]),ignore_index=True)\n",
    "    \n",
    "new_loc['id'] = locID\n",
    "  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [],
   "source": [
    "new_loc.time.apply(str)\n",
    "new_loc['time'] = pd.to_datetime(new_loc['time'])\n",
    "new_loc['date'] = pd.to_datetime(new_loc['time'], format='%Y:%M:%D').dt.date\n",
    "new_loc.drop(['time'], axis=1, inplace = True)\n",
    "new_loc.date = new_loc.date.astype(str)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [],
   "source": [
    "new_loc = new_loc[(new_loc.date >= dates[0]) & (new_loc.date <= dates[len(dates)-1])]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>nearestLoc</th>\n",
       "      <th>lat</th>\n",
       "      <th>name</th>\n",
       "      <th>lon</th>\n",
       "      <th>anxietyLevel</th>\n",
       "      <th>lng</th>\n",
       "      <th>patientID</th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Umar Bin Khattab Mosque</td>\n",
       "      <td>24.723305</td>\n",
       "      <td>Al Khuzama</td>\n",
       "      <td>46.598627</td>\n",
       "      <td>1</td>\n",
       "      <td>46.598627</td>\n",
       "      <td>UqTdL3T7MteuQHBe1aNfSE9u0Na2</td>\n",
       "      <td>009a38c5-0ce3-4fd6-857b-c9c38c46b03e</td>\n",
       "      <td>2020-04-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Nakhil Park</td>\n",
       "      <td>24.731897</td>\n",
       "      <td>An Nakheel District</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>46.600362</td>\n",
       "      <td>UqTdL3T7MteuQHBe1aNfSE9u0Na2</td>\n",
       "      <td>00bcdc87-77c7-4434-bc4a-4840e65098e0</td>\n",
       "      <td>2020-04-08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Al-Yamamah University</td>\n",
       "      <td>24.862388</td>\n",
       "      <td>Al Qirawan District</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>46.592138</td>\n",
       "      <td>UqTdL3T7MteuQHBe1aNfSE9u0Na2</td>\n",
       "      <td>00ded173-a5c8-4637-b150-4b20ac64e78b</td>\n",
       "      <td>2020-03-30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>SALT - Half Million</td>\n",
       "      <td>24.755278</td>\n",
       "      <td>Al Aqiq</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>46.632312</td>\n",
       "      <td>UqTdL3T7MteuQHBe1aNfSE9u0Na2</td>\n",
       "      <td>00e3d6bc-3d08-4b68-80d6-84d6e4c83bb8</td>\n",
       "      <td>2020-03-28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NaN</td>\n",
       "      <td>24.731897</td>\n",
       "      <td>An Nakheel District</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>46.600362</td>\n",
       "      <td>UqTdL3T7MteuQHBe1aNfSE9u0Na2</td>\n",
       "      <td>00e4924b-2176-4c34-be72-58742310b546</td>\n",
       "      <td>2020-04-12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>750</th>\n",
       "      <td>SALT - Half Million</td>\n",
       "      <td>24.755278</td>\n",
       "      <td>Al Aqiq</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>46.632312</td>\n",
       "      <td>UqTdL3T7MteuQHBe1aNfSE9u0Na2</td>\n",
       "      <td>fec65963-d574-4c00-b234-2d4a31fe7af3</td>\n",
       "      <td>2020-03-28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>751</th>\n",
       "      <td>Nakhil Park</td>\n",
       "      <td>24.731897</td>\n",
       "      <td>An Nakheel District</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>46.600362</td>\n",
       "      <td>UqTdL3T7MteuQHBe1aNfSE9u0Na2</td>\n",
       "      <td>ff13c359-9f8f-41d6-8346-23b57c5a625a</td>\n",
       "      <td>2020-04-07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>752</th>\n",
       "      <td>Nakhil Park</td>\n",
       "      <td>24.731897</td>\n",
       "      <td>An Nakheel District</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>46.600362</td>\n",
       "      <td>UqTdL3T7MteuQHBe1aNfSE9u0Na2</td>\n",
       "      <td>ffaf05db-875b-46c7-828d-f9f09be068ee</td>\n",
       "      <td>2020-04-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>753</th>\n",
       "      <td>وحدة الأنشطة الطلابية - مبنى 11</td>\n",
       "      <td>24.719809</td>\n",
       "      <td>King Saud University District</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>46.622945</td>\n",
       "      <td>UqTdL3T7MteuQHBe1aNfSE9u0Na2</td>\n",
       "      <td>fffad1cb-f0e7-4092-82f9-956026d40bd4</td>\n",
       "      <td>2020-04-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>756</th>\n",
       "      <td>Suwaidi Park - مصلى الحديقة</td>\n",
       "      <td>24.595528</td>\n",
       "      <td>As Suwaidi</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>46.693326</td>\n",
       "      <td>UqTdL3T7MteuQHBe1aNfSE9u0Na2</td>\n",
       "      <td>zcLTicRPDYbnqHDrgjtj</td>\n",
       "      <td>2020-03-24</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>754 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                          nearestLoc        lat  \\\n",
       "0            Umar Bin Khattab Mosque  24.723305   \n",
       "1                        Nakhil Park  24.731897   \n",
       "2              Al-Yamamah University  24.862388   \n",
       "3                SALT - Half Million  24.755278   \n",
       "4                                NaN  24.731897   \n",
       "..                               ...        ...   \n",
       "750              SALT - Half Million  24.755278   \n",
       "751                      Nakhil Park  24.731897   \n",
       "752                      Nakhil Park  24.731897   \n",
       "753  وحدة الأنشطة الطلابية - مبنى 11  24.719809   \n",
       "756      Suwaidi Park - مصلى الحديقة  24.595528   \n",
       "\n",
       "                              name        lon anxietyLevel        lng  \\\n",
       "0                       Al Khuzama  46.598627            1  46.598627   \n",
       "1              An Nakheel District        NaN            1  46.600362   \n",
       "2              Al Qirawan District        NaN            1  46.592138   \n",
       "3                          Al Aqiq        NaN            1  46.632312   \n",
       "4              An Nakheel District        NaN            1  46.600362   \n",
       "..                             ...        ...          ...        ...   \n",
       "750                        Al Aqiq        NaN            1  46.632312   \n",
       "751            An Nakheel District        NaN            1  46.600362   \n",
       "752            An Nakheel District        NaN            2  46.600362   \n",
       "753  King Saud University District        NaN            2  46.622945   \n",
       "756                     As Suwaidi        NaN            1  46.693326   \n",
       "\n",
       "                        patientID                                    id  \\\n",
       "0    UqTdL3T7MteuQHBe1aNfSE9u0Na2  009a38c5-0ce3-4fd6-857b-c9c38c46b03e   \n",
       "1    UqTdL3T7MteuQHBe1aNfSE9u0Na2  00bcdc87-77c7-4434-bc4a-4840e65098e0   \n",
       "2    UqTdL3T7MteuQHBe1aNfSE9u0Na2  00ded173-a5c8-4637-b150-4b20ac64e78b   \n",
       "3    UqTdL3T7MteuQHBe1aNfSE9u0Na2  00e3d6bc-3d08-4b68-80d6-84d6e4c83bb8   \n",
       "4    UqTdL3T7MteuQHBe1aNfSE9u0Na2  00e4924b-2176-4c34-be72-58742310b546   \n",
       "..                            ...                                   ...   \n",
       "750  UqTdL3T7MteuQHBe1aNfSE9u0Na2  fec65963-d574-4c00-b234-2d4a31fe7af3   \n",
       "751  UqTdL3T7MteuQHBe1aNfSE9u0Na2  ff13c359-9f8f-41d6-8346-23b57c5a625a   \n",
       "752  UqTdL3T7MteuQHBe1aNfSE9u0Na2  ffaf05db-875b-46c7-828d-f9f09be068ee   \n",
       "753  UqTdL3T7MteuQHBe1aNfSE9u0Na2  fffad1cb-f0e7-4092-82f9-956026d40bd4   \n",
       "756  UqTdL3T7MteuQHBe1aNfSE9u0Na2                  zcLTicRPDYbnqHDrgjtj   \n",
       "\n",
       "           date  \n",
       "0    2020-04-01  \n",
       "1    2020-04-08  \n",
       "2    2020-03-30  \n",
       "3    2020-03-28  \n",
       "4    2020-04-12  \n",
       "..          ...  \n",
       "750  2020-03-28  \n",
       "751  2020-04-07  \n",
       "752  2020-04-06  \n",
       "753  2020-04-10  \n",
       "756  2020-03-24  \n",
       "\n",
       "[754 rows x 9 columns]"
      ]
     },
     "execution_count": 133,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_loc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {},
   "outputs": [],
   "source": [
    "names = []\n",
    "Name =\"\"\n",
    "for row in new_loc.itertuples():\n",
    "    Name  = row.nearestLoc         \n",
    "    names.append(Name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [],
   "source": [
    "new_name =pd.DataFrame()\n",
    "new_name ['name']= names"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Umar Bin Khattab Mosque</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Nakhil Park</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Al-Yamamah University</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>SALT - Half Million</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>King Faisal Conference Hall</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Muhammad bin Zayd Al-Zamil Mosque - Asiri mosuq</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>3M Saudi Arabia - Fortinet</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Civil Affairs - Civil Affairs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Fitness Time - Fitness Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>dr. CAFE COFFEE - Dallah Hospital</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>وحدة الأنشطة الطلابية - مبنى 11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>240</th>\n",
       "      <td>KSMC - Kids Clinics building King Saud Medical...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>447</th>\n",
       "      <td>Ibn Khaldun Schools - ثانوية ابن خلدون بنين</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>753</th>\n",
       "      <td>Suwaidi Park - مصلى الحديقة</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                  name\n",
       "0                              Umar Bin Khattab Mosque\n",
       "1                                          Nakhil Park\n",
       "2                                Al-Yamamah University\n",
       "3                                  SALT - Half Million\n",
       "5                          King Faisal Conference Hall\n",
       "6      Muhammad bin Zayd Al-Zamil Mosque - Asiri mosuq\n",
       "12                          3M Saudi Arabia - Fortinet\n",
       "30                       Civil Affairs - Civil Affairs\n",
       "32                         Fitness Time - Fitness Time\n",
       "38                   dr. CAFE COFFEE - Dallah Hospital\n",
       "63                     وحدة الأنشطة الطلابية - مبنى 11\n",
       "240  KSMC - Kids Clinics building King Saud Medical...\n",
       "447        Ibn Khaldun Schools - ثانوية ابن خلدون بنين\n",
       "753                        Suwaidi Park - مصلى الحديقة"
      ]
     },
     "execution_count": 136,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_name = new_name.drop_duplicates()\n",
    "new_name.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "metadata": {},
   "outputs": [],
   "source": [
    "fnames = []\n",
    "fName =\"\"\n",
    "for row in new_name.itertuples():\n",
    "    fName  = row.name\n",
    "    fnames.append(fName)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 223,
   "metadata": {},
   "outputs": [],
   "source": [
    "analysis = pd.DataFrame()\n",
    "count = 0\n",
    "i = 0\n",
    "label = \"\"\n",
    "locationName = \"\"\n",
    "near = ''\n",
    "nearLocs = []\n",
    "counts = []\n",
    "labels = []\n",
    "locationNames = []\n",
    "for x in range(0,len(fnames)):\n",
    "    count = 0\n",
    "    locName = fnames[i]\n",
    "    for row in new_loc.itertuples():\n",
    "        if(locName == row.nearestLoc):\n",
    "            if(row.anxietyLevel=='3'):\n",
    "                count+=1\n",
    "                label = row.anxietyLevel\n",
    "                locationName = row.name\n",
    "                near = row.nearestLoc    \n",
    "                \n",
    "        \n",
    "    i+=1           \n",
    "    counts.append(count)\n",
    "    labels.append(label)\n",
    "    locationNames.append(locationName)\n",
    "    nearLocs.append(near)\n",
    "    \n",
    "analysis ['Location'] = locationNames\n",
    "analysis ['Frequency'] = counts\n",
    "analysis ['Anxiety Level'] = labels\n",
    "analysis ['Nearest Location'] = nearLocs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 224,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Location</th>\n",
       "      <th>Frequency</th>\n",
       "      <th>Anxiety Level</th>\n",
       "      <th>Nearest Location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Location  Frequency Anxiety Level Nearest Location\n",
       "0                    0                               \n",
       "1                    0                               \n",
       "2                    0                               \n",
       "3                    0                               \n",
       "4                    0                               \n",
       "5                    0                               \n",
       "6                    0                               \n",
       "7                    0                               \n",
       "8                    0                               \n",
       "9                    0                               \n",
       "10                   0                               \n",
       "11                   0                               \n",
       "12                   0                               \n",
       "13                   0                               \n",
       "14                   0                               "
      ]
     },
     "execution_count": 224,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 225,
   "metadata": {},
   "outputs": [],
   "source": [
    "newA = analysis.drop(analysis[analysis['Frequency'] == 0].index, inplace= True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 226,
   "metadata": {},
   "outputs": [],
   "source": [
    "analysis ['Anxiety Level'] = 'High'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 227,
   "metadata": {},
   "outputs": [],
   "source": [
    "import six\n",
    "\n",
    "import arabic_reshaper\n",
    "from bidi.algorithm import get_display\n",
    "\n",
    "from reportlab.pdfbase import pdfmetrics\n",
    "from reportlab.pdfbase.ttfonts import TTFont\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 228,
   "metadata": {},
   "outputs": [],
   "source": [
    "def render_mpl_table(data, col_width=5.0, row_height=0.625, font_size=14,\n",
    "                     header_color='#23495f', row_colors=['#e1eff7', 'w'], edge_color='#23495f',\n",
    "                     bbox=[0, 0, 1, 1], header_columns=0,\n",
    "                    ax=None, **kwargs):\n",
    "    \n",
    "\n",
    "    if ax is None:\n",
    "        size = (np.array(data.shape[::-1]) + np.array([0, 1])) * np.array([col_width, row_height])\n",
    "        fig, ax = plt.subplots(figsize=size)\n",
    "        ax.axis('off')\n",
    "    \n",
    "    mpl_table = ax.table(cellText=data.values, bbox=bbox, colLabels=data.columns, cellLoc='center'  ,**kwargs)\n",
    "\n",
    "    mpl_table.auto_set_font_size(False)\n",
    "    mpl_table.set_fontsize(font_size)\n",
    "    \n",
    "\n",
    "    for k, cell in  six.iteritems(mpl_table._cells):\n",
    "        cell.set_edgecolor(edge_color)\n",
    "        if k[0] == 0 or k[1] < header_columns:\n",
    "            cell.set_text_props(weight='bold', color='w')\n",
    "            cell.set_facecolor(header_color)\n",
    "        else:\n",
    "            cell.set_facecolor(row_colors[k[0]%len(row_colors) ])\n",
    "            cell.alignment = 'center'\n",
    "        \n",
    "           \n",
    "\n",
    "    \n",
    "    #fig.savefig('Location.png', dpi = 100)\n",
    "    return ax\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 229,
   "metadata": {},
   "outputs": [],
   "source": [
    "if(len(analysis) > 0):\n",
    "    render_mpl_table(analysis, header_columns=0, col_width=5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Genertate patient report and save it in storage"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 230,
   "metadata": {},
   "outputs": [],
   "source": [
    "pdfmetrics.registerFont(TTFont('Arabic', 'traditional-arabic/tradbdo.TTF'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 264,
   "metadata": {},
   "outputs": [],
   "source": [
    "pdf = canvas.Canvas('Patient-EN.pdf')\n",
    "pdf.setTitle('Patient report')\n",
    "\n",
    "\n",
    "\n",
    "pdf.drawImage(\"serene .png\", 150, 730, width=300,height=130, mask= 'auto')\n",
    "\n",
    "\n",
    "pdf.setFillColor(HexColor('#e1eff7'))\n",
    "pdf.roundRect(57,400, 485,200,4,fill=1, stroke= 0)\n",
    "\n",
    "pdf.setFont(\"Helvetica-Bold\", 16)\n",
    "pdf.setFillColor(HexColor('#23495f'))\n",
    "\n",
    "pdf.drawString(115,570, \"Report Duration From: \" + dates[0] +\" To: \"+ dates[len(dates)-1])\n",
    "\n",
    "pdf.setFont(\"Helvetica-Bold\", 15)\n",
    "pdf.drawString(250,540, \"Improvements: \")\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "pdf.setFillColor(HexColor('#e1eff7'))\n",
    "pdf.roundRect(57,160, 485,200,4,fill=1, stroke= 0)\n",
    "\n",
    "pdf.setFont(\"Helvetica-Bold\", 16)\n",
    "pdf.setFillColor(HexColor('#23495f'))\n",
    "\n",
    "pdf.drawString(80,330, \"Recommendations: \")\n",
    "pdf.drawString(100,300, \"Sleep Recomendation: \")\n",
    "pdf.drawString(100,220, \"Steps Recomendation: \")\n",
    "\n",
    "pdf.setFont(\"Helvetica\", 11)\n",
    "pdf.setFillColor(black)\n",
    "\n",
    "if(sleepRecomendation == True):\n",
    "    t = pdf.beginText(100,280)\n",
    "    text = [\"It is recommended to sleep at least 7-9 hours per day to get lower chance of anxiety.\" ,\n",
    "           \"Getting a good night’s sleep can improve your mental well-being and help you to better\",\n",
    "            \"manage your anxiety.\"]\n",
    "    for line in text:\n",
    "        t.textLine(line)\n",
    "    pdf.drawText(t)\n",
    "else:\n",
    "    t = pdf.beginText(100,280)\n",
    "    text = [\"Good News! It seems you're getting enough sleep!\",\n",
    "            \"Getting a good night’s sleep can improve your mental well-being and help you to better\",\n",
    "            \"manage your anxiety.\"]\n",
    "    for line in text:\n",
    "        t.textLine(line)\n",
    "    pdf.drawText(t)\n",
    "\n",
    "if(stepsRecomendation == True):\n",
    "    t = pdf.beginText(100,200)\n",
    "    text = [\"It is recommended to walk at least \"+recomendedSteps+\" steps per day to get lower chance of anxiety.\" ,\n",
    "            \"Keep in mind that active people have lower rates of anxiety than sedentary people.\"]\n",
    "    for line in text:\n",
    "        t.textLine(line)\n",
    "    pdf.drawText(t)\n",
    "    \n",
    "else:\n",
    "    t = pdf.beginText(100,200)\n",
    "    text = [\"Great Work! You're considered an active person based on your average steps per day.\",\n",
    "            \"Keep in mind that active people have lower rates of anxiety than sedentary people.\"]\n",
    "    for line in text:\n",
    "        t.textLine(line)\n",
    "    pdf.drawText(t)\n",
    "     \n",
    "pdf.showPage()\n",
    "\n",
    "\n",
    "pdf.drawImage(\"serene .png\", 150, 730, width=300,height=130, mask= 'auto')\n",
    "\n",
    "\n",
    "pdf.setFont(\"Helvetica-Bold\", 20)\n",
    "pdf.setFillColor(HexColor('#808080'))\n",
    "\n",
    "pdf.drawString(100,650, \"Anxiety Level\")\n",
    "\n",
    "if(len(plot_df)<=90):\n",
    "    pdf.drawImage(\"ALpdf.png\", 57, 400, width=485,height=200)\n",
    "    pdf.drawString(100,350, \"Location Analysis\")\n",
    "    if(len(analysis) > 0):\n",
    "        pdf.drawImage(\"Location.png\", 57, 100, width=485,height=200)\n",
    "    else:\n",
    "        pdf.setFont(\"Helvetica\", 15)\n",
    "        pdf.setFillColor(HexColor('#23495f'))\n",
    "    \n",
    "        t = pdf.beginText(130,250)\n",
    "        text = [\n",
    "        name +\" condition was stable through this period,\", \n",
    "        \"no locations with high anxiety level were detected.\" ]\n",
    "        for line in text:\n",
    "            t.textLine(line)\n",
    "  \n",
    "        pdf.drawText(t)\n",
    "       \n",
    "    if(len(notSyncedDates) != 0):  \n",
    "        pdf.setFont(\"Helvetica\", 12)\n",
    "        pdf.setFillColor(HexColor('#d40027'))\n",
    "        pdf.drawString(75,95, \"Note: Below dates are missing, because they were not synced correctly:\")\n",
    "        i = 70\n",
    "        for row in notSyncedDates.itertuples():\n",
    "            pdf.drawString(85,i, '- '+ row.date)\n",
    "            i = i-20\n",
    "    pdf.showPage()\n",
    "else:\n",
    "    j = 400\n",
    "    for x in range(0,len(dfarray)):\n",
    "        pdf.drawImage('AL'+str(x)+'pdf.png', 57, j, width=485,height=200)\n",
    "        j = j-300\n",
    "    pdf.showPage()\n",
    "    \n",
    "    pdf.drawImage(\"serene .png\", 150, 730, width=300,height=130, mask= 'auto')\n",
    "    \n",
    "    pdf.setFont(\"Helvetica-Bold\", 20)\n",
    "    pdf.setFillColor(HexColor('#808080'))\n",
    "    pdf.drawString(100,650, \"Location Analysis\")\n",
    "    if(len(analysis) > 0):\n",
    "        pdf.drawImage(\"Location.png\", 57, 400, width=485,height=200)\n",
    "    else:\n",
    "        pdf.setFont(\"Helvetica\", 15)\n",
    "        pdf.setFillColor(HexColor('#23495f'))\n",
    "    \n",
    "        t = pdf.beginText(130,550)\n",
    "        text = [\n",
    "        name +\" condition was stable through this period,\", \n",
    "        \"no locations with high anxiety level were detected.\" ]\n",
    "        for line in text:\n",
    "            t.textLine(line)\n",
    "  \n",
    "        pdf.drawText(t)\n",
    "        \n",
    "    if(len(notSyncedDates) != 0):  \n",
    "        pdf.setFont(\"Helvetica\", 12)\n",
    "        pdf.setFillColor(HexColor('#d40027'))\n",
    "        pdf.drawString(75,100, \"Note: Below dates are missing, because they were not synced correctly:\")\n",
    "        i = 70\n",
    "        for row in notSyncedDates.itertuples():\n",
    "            pdf.drawString(85,i, '- '+ row.date)\n",
    "            i = i-20\n",
    "\n",
    "pdf.save()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 265,
   "metadata": {},
   "outputs": [],
   "source": [
    "def translate(text):\n",
    "    reshaped_text = arabic_reshaper.reshape(text)\n",
    "    bidi_text = get_display(reshaped_text)\n",
    "    return bidi_text"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 266,
   "metadata": {},
   "outputs": [],
   "source": [
    "pdf = canvas.Canvas('Patient-AR.pdf')\n",
    "pdf.setTitle('تقرير المريض')\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "#pdf.setFont(\"Arabic\", 15)\n",
    "\n",
    "pdf.drawImage(\"serene .png\", 150, 730, width=300,height=130, mask= 'auto')\n",
    "\n",
    "\n",
    "pdf.setFillColor(HexColor('#e1eff7'))\n",
    "pdf.roundRect(57,400, 485,200,4,fill=1, stroke= 0)\n",
    "\n",
    "pdf.setFont(\"Arabic\", 22)\n",
    "pdf.setFillColor(HexColor('#23495f'))\n",
    "\n",
    "reportDuration = translate (u'مدة التقرير من')\n",
    "to = translate (u'إلى')\n",
    "pdf.drawString(125,570, dates[len(dates)-1] +' '+ to +' ' + dates[0] +' '+reportDuration)\n",
    "\n",
    "pdf.setFont(\"Arabic\", 22)\n",
    "improve = translate(u'التحسينات')\n",
    "pdf.drawString(260,540, improve)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "pdf.setFillColor(HexColor('#e1eff7'))\n",
    "pdf.roundRect(57,160, 485,200,4,fill=1, stroke= 0)\n",
    "\n",
    "pdf.setFont(\"Arabic\", 22)\n",
    "pdf.setFillColor(HexColor('#23495f'))\n",
    "\n",
    "\n",
    "rec = translate (u'  التوصيات:')\n",
    "stepRec = translate(u'توصيات النشاط:')\n",
    "sleepRec = translate (u'توصيات النوم:')\n",
    "\n",
    "pdf.drawString(420,330, rec)\n",
    "pdf.drawString(380,300, sleepRec)\n",
    "pdf.drawString(360,220, stepRec)\n",
    "\n",
    "pdf.setFont(\"Arabic\", 15)\n",
    "pdf.setFillColor(black)\n",
    "\n",
    "if(sleepRecomendation == True):\n",
    "    \n",
    "    text = translate (u'يوصى بالنوم لمدة تتراوح بين ٧-٩ ساعات في اليوم للحصول على أقل معدل قلق.')\n",
    "    text2 = translate (u'يمكن أن يحسن النوم الجيد ليلاً من صحتك العقلية ويساعدك على إدارة قلقك بشكل أفضل.')\n",
    "    pdf.drawString(120,280, text)\n",
    "    pdf.drawString(80,260, text2)\n",
    "\n",
    "else:\n",
    "\n",
    "    text = translate (u'أخبار جيدة! يبدو أنك تحصل على قسط كافٍ من اليوم.')\n",
    "    text2 = translate (u'يمكن أن يحسن النوم الجيد ليلاً من صحتك العقلية ويساعدك على إدارة قلقك بشكل أفضل.')                   \n",
    "    pdf.drawString(230,280, text)\n",
    "    pdf.drawString(80,260, text2)\n",
    "\n",
    "\n",
    "if(stepsRecomendation == True):\n",
    "    \n",
    "    btwnText = translate (u'خطوة في اليوم للحصول على أقل معدل قلق. ')\n",
    "    text = translate (u'يوصى بالمشي على الأقل')\n",
    "    text2 = translate (u'تذكر أن الأشخاص الأكثر نشاطاً لديهم معدلات قلق أقل من أولئك الغير نشطين.')\n",
    "    pdf.drawString(130,200, btwnText + recomendedSteps + text)\n",
    "    pdf.drawString(120,180, text2)\n",
    "\n",
    "    \n",
    "else:\n",
    "    text = translate (u'عمل رائع! بناءاً على معدل خطواتك في اليوم الواحد، أنت تعتبر من الأشخاص النشطين.')\n",
    "    text2 = translate (u'تذكر أن الأشخاص الأكثر نشاطاً لديهم معدلات قلق أقل من أولئك الغير نشطين.')\n",
    "    pdf.drawString(100,200, text)\n",
    "    pdf.drawString(130,180, text2)\n",
    "\n",
    "     \n",
    "pdf.showPage()\n",
    "\n",
    "\n",
    "pdf.drawImage(\"serene .png\", 150, 730, width=300,height=130, mask= 'auto')\n",
    "\n",
    "\n",
    "pdf.setFont(\"Arabic\", 32)\n",
    "pdf.setFillColor(HexColor('#808080'))\n",
    "\n",
    "AL = translate(u'مستوى القلق')\n",
    "\n",
    "pdf.drawString(400,650, AL)\n",
    "\n",
    "loc = translate (u'تحليل الموقع')\n",
    "if(len(plot_df)<=90):\n",
    "    pdf.drawImage(\"ALpdf.png\", 57, 400, width=485,height=200)\n",
    "    pdf.drawString(400,350, loc)\n",
    "    if(len(analysis) > 0):\n",
    "        pdf.drawImage(\"Location.png\", 57, 100, width=485,height=200)\n",
    "    else:\n",
    "        pdf.setFont(\"Arabic\", 18)\n",
    "        pdf.setFillColor(HexColor('#23495f'))\n",
    "    \n",
    "        text = translate (u'كانت الحالة مستقرة خلال هذه الفترة, لم يتم الكشف عن أي مواقع ذات مستوى قلق مرتفع.')\n",
    "        pdf.drawString(60,250, text)\n",
    "\n",
    "       \n",
    "    if(len(notSyncedDates) != 0):  \n",
    "        pdf.setFont(\"Arabic\", 15)\n",
    "        pdf.setFillColor(HexColor('#d40027'))\n",
    "        note = translate (u'ملاحظة: التواريخ المذكورة أدناه غير متضمنة في التحليل لعدم مزامنة البيانات.')\n",
    "        pdf.drawString(200,95, note)\n",
    "        i = 70\n",
    "        for row in notSyncedDates.itertuples():\n",
    "            pdf.setFont(\"Helvetica\", 12)\n",
    "            pdf.drawString(450,i,  row.date +' -')\n",
    "            i = i-20\n",
    "    pdf.showPage()\n",
    "else:\n",
    "    j = 400\n",
    "    for x in range(0,len(dfarray)):\n",
    "        pdf.drawImage('AL'+str(x)+'pdf.png', 57, j, width=485,height=200)\n",
    "        j = j-300\n",
    "    pdf.showPage()\n",
    "    \n",
    "    pdf.drawImage(\"serene .png\", 150, 730, width=300,height=130, mask= 'auto')\n",
    "    \n",
    "    pdf.setFont(\"Arabic\", 32)\n",
    "    pdf.setFillColor(HexColor('#808080'))\n",
    "    loc = translate (u'تحليل الموقع')\n",
    "    pdf.drawString(400,650, loc)\n",
    "    if(len(analysis) > 0):\n",
    "        pdf.drawImage(\"Location.png\", 57, 400, width=485,height=200)\n",
    "    else:\n",
    "        pdf.setFont(\"Arabic\", 18)\n",
    "        pdf.setFillColor(HexColor('#23495f'))\n",
    "    \n",
    "        t = pdf.beginText(130,550)\n",
    "        text = translate (u'.كانت الحالة مستقرة خلال هذه الفترة, لم يتم الكشف عن أي مواقع ذات مستوى قلق مرتفع')\n",
    "        pdf.drawString(60,550, text)\n",
    "\n",
    "        \n",
    "    if(len(notSyncedDates) != 0):  \n",
    "        pdf.setFont(\"Arabic\", 15)\n",
    "        pdf.setFillColor(HexColor('#d40027'))\n",
    "        note = translate (u'.ملاحظة: التواريخ المذكورة أدناه غير متضمنة في التحليل لعدم مزامنة البيانات')\n",
    "        pdf.drawString(200,100, note)\n",
    "        i = 70\n",
    "        for row in notSyncedDates.itertuples():\n",
    "            pdf.setFont(\"Helvetica\", 12)\n",
    "            pdf.drawString(450,i,  row.date + ' -')\n",
    "            i = i-20\n",
    "\n",
    "pdf.save()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 267,
   "metadata": {},
   "outputs": [],
   "source": [
    "#new method\n",
    "doct = storage.child(userID+\"/lastGeneratedPatientReport/patientReport-EN\").put('Patient-EN.pdf')\n",
    "doct = storage.child(userID+\"/lastGeneratedPatientReport/patientReport-AR\").put('Patient-AR.pdf')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 268,
   "metadata": {},
   "outputs": [],
   "source": [
    "os.remove('Patient-EN.pdf')\n",
    "os.remove('Patient-AR.pdf')\n",
    "\n",
    "if(len(plot_df)<=90):\n",
    "     os.remove('ALpdf.png')\n",
    "else:\n",
    "    for x in range(0,len(dfarray)):\n",
    "        os.remove('AL'+str(x)+'pdf.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
>>>>>>> Stashed changes
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
